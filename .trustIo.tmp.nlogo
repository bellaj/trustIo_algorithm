globals[
  time
  total_global_transactions ;  the global number of transactions
  number_of_nodes;
  current_ticks;
  number_of_malicous_nodes
  number_of_good_nodes
  security_treshold ; to vote trust score should be > security_treshold
]
;globals variables hold values that are accessible anywhere in th program
;link parameters
links-own [
  weight ; each directed * is weighted
]
;;peer's parameters
turtles-own [
  security_score
  User_behavior
  service               ;;each node offer a certian number of services, we will use just 0 or 1
  total_transactions    ;;N of tx performed by the peer
  my_trust_value        ;;peers label
  malicious             ;;is the peer malicious or not?
  list_time_of_feedback_given; a list of time_of_transaction. the time of the feedback given during a transaction
  list_time_of_transaction ; list of time_of_transaction which is the current tick

  list_satisfaction ; feedback for peer's actions => filled using get-satisfaction method for a given transaction
  list_credibility ;  list of normalised credebility values (for all peers); a random value generated by get-credebility fct [0-1]
  list_transaction_context_factor_value
  list_other_peer_id
]


to setup
  settings-initialization
  clear-all                       ;; clear everything on canvas
  setup-nodes                     ;; a procedure to set nodes
  setup-edges                     ;; a procedure to set edges
  setup-malicious-nodes
  ;ask turtles [ set color red]   ;; paint nodes red
  ask links [set color white]     ;; paint edges white
  reset-ticks
  layout
end
;--------------------------------------
;Network intialization
;-------------------------------------
to setup-nodes
  set-default-shape turtles "circle"
  set number_of_nodes number_of_peers ;number_peers is defined in the interface
  create-turtles number_of_nodes
  ask turtles
  [
    set color green
    set size 1.2

    ;;set service
    set service random 1;no_services_available

    ;;initialise the initial trust values
    set my_trust_value global_initial_trust_value

    ;;set the label for the nodes
    set label precision my_trust_value 2 ;1.25 2 digits after .


    ;;set malicious status
    set malicious false

    ; for visual reasons, we don't put any nodes *too* close to the edges
    setxy (random-xcor * 0.95) (random-ycor * 0.95)
  ]

end

to setup-malicious-nodes
    ;;set malicious peers according to percentage
  let n_malicious round ((number_of_nodes * number_of_malicious_nodes) / 100) ; malicious_peers % defined in the interface

  let malicious_peers_set n-of n_malicious turtles
  ask malicious_peers_set
  [
    set color red
    set malicious true
  ]


  ;;calculate number of malicous nodes in the network
  set number_of_malicous_nodes n_malicious
  ;;calculate number of good nodes
  set number_of_good_nodes number_of_nodes - number_of_malicous_nodes  
  show word "number of malicious peers :" number_of_malicous_nodes
end



to setup-edges
  let num-links  6

  while [ count links < num-links ] ;; num-links given by the user from interface
  [
    ask one-of turtles
    [
      let other_turtle one-of other turtles

      if other_turtle != nobody [ create-link-to other_turtle ]
      ask link-with other_turtle [
        set weight 10
        set label weight
       
      ]
      show word " new link:" link-with other_turtle
      ask link-with other_turtle[
          if weight = 0 ; for unkonw reason weight for some links isn't set in the previous operation
          [
          show word "error weigh detected and corrected" other_turtle
          set weight 10
          
        ]
          show word "wieight is" weight
      ]
    ]
  ]
    ; make the network look a little prettier
    repeat 10
    [
      layout-spring turtles links 0.3 (world-width / (sqrt number_of_nodes)) 1
    ]
end


;--------------------------------------
; Initialition and entrypoint
;-------------------------------------
to settings-initialization
  set security_treshold 0.2
end

to go
  if not any? turtles [stop] ;exits if there are no more turtles

  set current_ticks ticks
  
  transact
  
  layout
  tick
end

;--------------------------------------
; Functions
;-------------------------------------
to transact
  
end


;-------------------------------
;Display settings
;--------------------------------

to layout
  ;; the number 3 here is arbitrary; more repetitions slows down the
  ;; model, but too few gives poor layouts
  repeat 3 [
    ;; the more turtles we have to fit into the same amount of space,
    ;; the smaller the inputs to layout-spring we'll need to use
    let factor sqrt count turtles
    ;; numbers here are arbitrarily chosen for pleasing appearance
    layout-spring turtles links (1 / factor) (7 / factor) (10 / factor)
    display  ;; for smooth animation
  ]
  ;; don't bump the edges of the world
  let x-offset max [xcor] of turtles + min [xcor] of turtles
  let y-offset max [ycor] of turtles + min [ycor] of turtles
  ;; big jumps look funny, so only adjust a little each time
  set x-offset limit-magnitude x-offset 0.1
  set y-offset limit-magnitude y-offset 0.1
  ask turtles [ setxy (xcor - x-offset / 2) (ycor - y-offset / 2) ]
end
to-report limit-magnitude [number limit]
  if number > limit [ report limit ]
  if number < (- limit) [ report (- limit) ]
  report number
end
